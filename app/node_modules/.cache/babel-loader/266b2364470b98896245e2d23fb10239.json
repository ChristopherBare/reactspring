{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Desktop/react-spring/app/src/GroupList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n    const cookies = props.cookies;\n    this.state = {\n      groups: [],\n      csrfToken: cookies.get('XSRF-TOKEN'),\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('api/groups', {\n      credentials: 'include'\n    }).then(response => response.json()).then(data => this.setState({\n      groups: data,\n      isLoading: false\n    })).catch(() => this.props.history.push('/'));\n  }\n\n  async remove(id) {\n    await fetch(\"/api/group/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(() => {\n      let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n      this.setState({\n        groups: updatedGroups\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          groups = _this$state.groups,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const groupList = groups.map(group => {\n      const address = \"\".concat(group.address || '', \" \").concat(group.city || '', \" \").concat(group.stateOrProvince || '');\n      return React.createElement(\"tr\", {\n        key: group.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: {\n          whiteSpace: 'nowrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, group.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, group.events.map(event => {\n        return React.createElement(\"div\", {\n          key: event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, new Intl.DateTimeFormat('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: '2-digit'\n        }).format(new Date(event.date)), \": \", event.title);\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"primary\",\n        tag: Link,\n        to: \"/groups/\" + group.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: () => this.remove(group.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Delete\"))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/groups/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add Group\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"My JUG Tour\"), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Events\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, groupList))));\n  }\n\n}\n\nGroupList.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(withRouter(GroupList));","map":{"version":3,"sources":["/home/christopher/Desktop/react-spring/app/src/GroupList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","withRouter","instanceOf","withCookies","Cookies","GroupList","constructor","props","cookies","state","groups","csrfToken","get","isLoading","remove","bind","componentDidMount","setState","fetch","credentials","then","response","json","data","catch","history","push","id","method","headers","updatedGroups","filter","i","render","groupList","map","group","address","city","stateOrProvince","whiteSpace","name","events","event","Intl","DateTimeFormat","year","month","day","format","Date","date","title","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,cAArC;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAM9BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,UAERC,OAFQ,GAEGD,KAFH,CAERC,OAFQ;AAGf,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,SAAS,EAAEH,OAAO,CAACI,GAAR,CAAY,YAAZ,CAAxB;AAAmDC,MAAAA,SAAS,EAAE;AAA9D,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAE;AAAZ,KAAd;AAEAK,IAAAA,KAAK,CAAC,YAAD,EAAe;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAf,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKN,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEa,IAAT;AAAeV,MAAAA,SAAS,EAAE;AAA1B,KAAd,CAFlB,EAGKW,KAHL,CAGW,MAAM,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAHjB;AAIH;;AAED,QAAMZ,MAAN,CAAaa,EAAb,EAAiB;AACb,UAAMT,KAAK,sBAAeS,EAAf,GAAqB;AAC5BC,MAAAA,MAAM,EAAE,QADoB;AAE5BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,KAAKpB,KAAL,CAAWE,SADtB;AAEL,kBAAU,kBAFL;AAGL,wBAAgB;AAHX,OAFmB;AAO5BQ,MAAAA,WAAW,EAAE;AAPe,KAArB,CAAL,CAQHC,IARG,CAQE,MAAM;AACV,UAAIU,aAAa,GAAG,CAAC,GAAG,KAAKrB,KAAL,CAAWC,MAAf,EAAuBqB,MAAvB,CAA8BC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA5C,CAApB;AACA,WAAKV,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEoB;AAAT,OAAd;AACH,KAXK,CAAN;AAYH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKxB,KAD5B;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUG,SADV,eACUA,SADV;;AAGL,QAAIA,SAAJ,EAAe;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,UAAMqB,SAAS,GAAGxB,MAAM,CAACyB,GAAP,CAAWC,KAAK,IAAI;AAClC,YAAMC,OAAO,aAAMD,KAAK,CAACC,OAAN,IAAiB,EAAvB,cAA6BD,KAAK,CAACE,IAAN,IAAc,EAA3C,cAAiDF,KAAK,CAACG,eAAN,IAAyB,EAA1E,CAAb;AACA,aAAO;AAAI,QAAA,GAAG,EAAEH,KAAK,CAACT,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAI,QAAA,KAAK,EAAE;AAACa,UAAAA,UAAU,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCJ,KAAK,CAACK,IAA1C,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,OAAL,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,KAAK,CAACM,MAAN,CAAaP,GAAb,CAAiBQ,KAAK,IAAI;AAC3B,eAAO;AAAK,UAAA,GAAG,EAAEA,KAAK,CAAChB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqB,IAAIiB,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AACzDC,UAAAA,IAAI,EAAE,SADmD;AAEzDC,UAAAA,KAAK,EAAE,MAFkD;AAGzDC,UAAAA,GAAG,EAAE;AAHoD,SAAjC,EAIzBC,MAJyB,CAIlB,IAAIC,IAAJ,CAASP,KAAK,CAACQ,IAAf,CAJkB,CAArB,QAI4BR,KAAK,CAACS,KAJlC,CAAP;AAKH,OANI,CAAL,CAHG,EAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,GAAG,EAAEpD,IAAvC;AAA6C,QAAA,EAAE,EAAE,aAAaoC,KAAK,CAACT,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,KAAK,EAAC,QAAxB;AAAiC,QAAA,OAAO,EAAE,MAAM,KAAKb,MAAL,CAAYsB,KAAK,CAACT,EAAlB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,CAVG,CAAP;AAiBH,KAnBiB,CAAlB;AAqBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAE3B,IAA7B;AAAmC,MAAA,EAAE,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADA,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCkC,SADD,CATJ,CALJ,CAFJ,CADJ;AAwBH;;AAzF6B;;AAA5B7B,S,CAEKgD,S,GAAY;AACf7C,EAAAA,OAAO,EAAEN,UAAU,CAACE,OAAD,CAAV,CAAoBkD;AADd,C;AA0FvB,eAAenD,WAAW,CAACF,UAAU,CAACI,SAAD,CAAX,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport {Link, withRouter} from 'react-router-dom';\nimport {instanceOf} from \"prop-types\";\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass GroupList extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        const {cookies} = props;\n        this.state = {groups: [], csrfToken: cookies.get('XSRF-TOKEN'), isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('api/groups', {credentials: 'include'})\n            .then(response => response.json())\n            .then(data => this.setState({groups: data, isLoading: false}))\n            .catch(() => this.props.history.push('/'));\n    }\n\n    async remove(id) {\n        await fetch(`/api/group/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'X-XSRF-TOKEN': this.state.csrfToken,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(() => {\n            let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n            this.setState({groups: updatedGroups});\n        });\n    }\n\n    render() {\n        const {groups, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const groupList = groups.map(group => {\n            const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n            return <tr key={group.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n                <td>{address}</td>\n                <td>{group.events.map(event => {\n                    return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: '2-digit'\n                    }).format(new Date(event.date))}: {event.title}</div>\n                })}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\n                    </div>\n                    <h3>My JUG Tour</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"20%\">Name</th>\n                            <th width=\"20%\">Location</th>\n                            <th>Events</th>\n                            <th width=\"10%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {groupList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withCookies(withRouter(GroupList));"]},"metadata":{},"sourceType":"module"}