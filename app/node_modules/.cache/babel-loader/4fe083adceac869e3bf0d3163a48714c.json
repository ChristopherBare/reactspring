{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Desktop/react-spring/app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GroupList from './GroupList';\nimport GroupEdit from './GroupEdit';\nimport { CookiesProvider } from \"react-cookie\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      groups: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/groups');\n    const body = await response.json();\n    this.setState({\n      groups: body,\n      isLoading: false\n    });\n  }\n\n  render() {\n    return React.createElement(CookiesProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/groups\",\n      exact: true,\n      component: GroupList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/groups/:id\",\n      component: GroupEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/christopher/Desktop/react-spring/app/src/App.js"],"names":["React","Component","Home","BrowserRouter","Router","Route","Switch","GroupList","GroupEdit","CookiesProvider","App","state","isLoading","groups","componentDidMount","response","fetch","body","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBU,KADwB,GAChB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADgB;AAAA;;AAMxB,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAEI,IAAT;AAAeL,MAAAA,SAAS,EAAE;AAA1B,KAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAE,IAAvB;AAA6B,MAAA,SAAS,EAAElB,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAE,IAA7B;AAAmC,MAAA,SAAS,EAAEK,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAEC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ,CADA;AAWH;;AAxBuB;;AA2B5B,eAAeE,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Home from './Home';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport GroupList from './GroupList';\nimport GroupEdit from './GroupEdit';\nimport { CookiesProvider } from \"react-cookie\";\n\nclass App extends Component {\n    state = {\n        isLoading: true,\n        groups: []\n    };\n\n    async componentDidMount() {\n        const response = await fetch('/api/groups');\n        const body = await response.json();\n        this.setState({groups: body, isLoading: false});\n    }\n\n    render() {\n        return (\n        <CookiesProvider>\n            <Router>\n                <Switch>\n                    <Route path='/' exact={true} component={Home}/>\n                    <Route path='/groups' exact={true} component={GroupList}/>\n                    <Route path='/groups/:id' component={GroupEdit}/>\n                </Switch>\n            </Router>\n        </CookiesProvider>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}